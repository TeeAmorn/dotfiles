#!/bin/bash
set -e 

SCRIPT_DIR=$( cd -- "$( dirname -- "${BASH_SOURCE[0]}" )" &> /dev/null && pwd )

# ========================================
# Miscellaneous
# ========================================

cp -r $SCRIPT_DIR/../fonts $HOME/.local/share

if ! [ -d "$HOME/Pictures/wallpaper" ]; then
    mkdir $HOME/Pictures/wallpaper
fi

if ! [ -f "$HOME/Pictures/wallpaper/nature.jpg" ]; then
    curl -L --create-dirs https://images.hdqwalls.com/download/tranquility-minimal-4k-6q-2560x1440.jpg > $HOME/Pictures/wallpaper/nature.jpg
fi

# Install Neofetch
if ! [ -x "$(command -v neofetch)" ]; then
    sudo dnf install -y neofetch
    if ! [ -f "$HOME/.bashrc" ]; then
        touch $HOME/.bashrc
    fi
    echo "neofetch" >> $HOME/.bashrc
fi

# ========================================
# Nvim and Languages Installation
# ========================================

# Install Rust
if ! [ -x "$(command -v cargo)" ]; then
    curl https://sh.rustup.rs -sSf | sh
    source "$HOME/.cargo/env"
fi

# Install ripgrep; needed for Telescope in Nvim
if ! [ -x "$(command -v rg)" ]; then
    sudo dnf install -y ripgrep
fi

# Install Node.js; needed for certain LSPs used in Nvim
if ! [ -x "$(command -v npm)" ]; then
    sudo dnf module install -y nodejs:18/common
fi

# Install Nvim
if ! [ -x "$(command -v nvim)" ]; then
    sudo dnf install -y neovim python3-neovim
fi

# Copy Nvim configuration to .config/
cp -r $SCRIPT_DIR/../nvim $HOME/.config

# Install Packer.nvim
if ! [ -d "$HOME/.local/share/nvim/site/pack/packer/start/packer.nvim" ]; then
    git clone --depth 1 https://github.com/wbthomason/packer.nvim\
     $HOME/.local/share/nvim/site/pack/packer/start/packer.nvim
    # # Run PackerSync in Nvim and suppress all messages
    # nvim --headless -c 'autocmd User PackerComplete quitall' -c 'PackerSync' &>/dev/null
fi

# ========================================
# i3 Installation
# ========================================

# Install Rofi
if ! [ -x "$(command -v rofi)" ]; then
    sudo dnf install -y rofi
fi

# Copy Rofi configuration to .config/
cp -r $SCRIPT_DIR/../rofi $HOME/.config

# Install i3
if ! [ -x "$(command -v i3)" ]; then
    sudo dnf install -y i3
fi

# Copy i3 configuration to .config/
cp -r $SCRIPT_DIR/../i3 $HOME/.config

# Install Feh
if ! [ -x "$(command -v feh)" ]; then
    sudo dnf install -y feh
fi

# Picom
if ! [ -x "$(command -v picom)" ]; then
    sudo dnf install -y picom
fi
#
# Copy Picom configuration to .config/
cp -r $SCRIPT_DIR/../picom $HOME/.config

# ========================================
# Alacritty Installation
# ========================================

# Install Alacirtty
if ! [ -x "$(command -v alacritty)" ]; then
    # Clone directory
    git clone https://github.com/alacritty/alacritty.git $SCRIPT_DIR/alacritty

    # Build binary
    cd $SCRIPT_DIR/alacritty
    sudo dnf install -y cmake freetype-devel fontconfig-devel libxcb-devel libxkbcommon-devel g++
    cargo build --release

    # Save binary into $PATH
    sudo cp target/release/alacritty /usr/local/bin # or anywhere else in $PATH

    # Create desktop shortcut for binary
    sudo cp extra/logo/alacritty-term.svg /usr/share/pixmaps/Alacritty.svg
    sudo desktop-file-install extra/linux/Alacritty.desktop
    sudo update-desktop-database

    # Include autocompletion
    mkdir -p ~/.bash_completion
    cp extra/completions/alacritty.bash ~/.bash_completion/alacritty
    echo "source ~/.bash_completion/alacritty" >> ~/.bashrc

    # Clean up
    cd $SCRIPT_DIR
    rm -rf alacritty
fi

# Install fonts
NUM_OF_JETBRAINS_FONT=$(fc-list | grep 'ttf: JetBrains Mono' | wc -l)
if [ "$NUM_OF_JETBRAINS_FONT" = "0" ]; then
    /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/JetBrains/JetBrainsMono/master/install_manual.sh)"
fi

# Copy Alacritty configuration to .config/
cp -r $SCRIPT_DIR/../alacritty $HOME/.config
